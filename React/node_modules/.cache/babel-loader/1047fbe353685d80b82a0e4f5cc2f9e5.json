{"ast":null,"code":"var _jsxFileName = \"/Users/tsornghawchen/Workarea/src/upload-and-download-file/React/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Define a type for your data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  const [fileList, setFileList] = useState(null);\n  const [selectedImage, setSelectedImage] = useState('');\n  const handleFileChange = e => {\n    setFileList(e.target.files);\n    const selectedFiles = e.target.files;\n    if (selectedFiles && selectedFiles.length > 0) {\n      const file = selectedFiles[0];\n      setSelectedImage(URL.createObjectURL(file));\n    }\n  };\n  const handleDownload = async () => {\n    // Implement the API call to download here\n    console.log('Downloading...');\n    // You can use fetch or any other library to make the API call\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/download/test.png');\n      const blob = await response.blob();\n\n      // Create a URL for the blob data and trigger a download\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'filename.extension'; // Set the desired filename\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading the file:', error);\n    }\n  };\n  const handleApi = () => {\n    if (fileList === null || fileList.length === 0) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append(`file`, fileList[0], fileList[0].name);\n    console.log(fileList[0]);\n    fetch('http://localhost:8000/api/auth/upload', {\n      method: 'POST',\n      body: formData\n    });\n  };\n\n  // Testing\n  const [data, setData] = useState([]);\n  const [selectedOption, setSelectedOption] = useState('');\n\n  // useEffect(() => {\n  //     // Make an HTTP request to your Go backend\n  //     axios.get('http://localhost:8000/api/auth/UserSearchAllData')\n  //         .then(response => {\n  //             console.log(response.data)\n  //             setData(response.data);\n  //         })\n  //         .catch(error => {\n  //             // Handle the error\n  //         });\n  // }, []);\n  useEffect(() => {\n    let isMounted = true; // Add a variable to track if the component is mounted\n\n    // Fetch data from your backend API\n    fetch('http://localhost:8000/api/auth/UserSearchAllData') // Replace with the actual endpoint\n    .then(response => response.json()).then(data => {\n      // Check if the component is still mounted before updating state\n      if (isMounted) {\n        setData(data);\n      }\n      console.log(data);\n      console.log(data[0].Dataname);\n      console.log(data[0].DownloadURL);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n\n    // Cleanup function to set isMounted to false when the component unmounts\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"// If Authenticated\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"myFile\",\n        name: \"filename\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Selected\",\n        style: {\n          maxWidth: '600px',\n          maxHeight: '600px'\n        } // Set your desired max width and max height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApi,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: e => setSelectedOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.DownloadURL,\n          children: item.Dataname\n        }, item.Dataname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Download URL: \", selectedOption]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }, this) :\n    // If not Authenticate\n    'You are not logged in'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"AvRQa7ERdjmfkhFOQ55nq7Z1rxk=\");\n_c = Home;\nexport default Home;\nfunction setSelectedImage(arg0) {\n  throw new Error('Function not implemented.');\n}\n// Optimization: pjchender - Day23\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","props","_s","fileList","setFileList","selectedImage","setSelectedImage","handleFileChange","e","target","files","selectedFiles","length","file","URL","createObjectURL","handleDownload","console","log","response","fetch","blob","url","window","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","error","handleApi","formData","FormData","append","name","method","data","setData","selectedOption","setSelectedOption","isMounted","then","json","Dataname","DownloadURL","catch","children","type","id","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","maxHeight","onClick","value","map","item","_c","arg0","Error","$RefreshReg$"],"sources":["/Users/tsornghawchen/Workarea/src/upload-and-download-file/React/src/pages/Home.tsx"],"sourcesContent":["import React, { ChangeEvent, ChangeEventHandler, useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// Define a type for your data\ntype DataItem = {\n    Dataname: string;\n    DownloadURL: string;\n  };\n\nconst Home = (props: { name: string }) => {\n    const [fileList, setFileList] = useState<FileList | null>(null);\n    const [selectedImage, setSelectedImage] = useState('');\n\n    const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setFileList(e.target.files);\n        \n        const selectedFiles = e.target.files\n\n        if (selectedFiles && selectedFiles.length > 0) {\n            const file = selectedFiles[0];\n            setSelectedImage(URL.createObjectURL(file));\n        }\n    };\n\n    const handleDownload = async () => {\n        // Implement the API call to download here\n        console.log('Downloading...');\n        // You can use fetch or any other library to make the API call\n        try {\n            const response = await fetch('http://localhost:8000/api/auth/download/test.png');\n            const blob = await response.blob();\n            \n            // Create a URL for the blob data and trigger a download\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'filename.extension'; // Set the desired filename\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        } catch (error) {\n            console.error('Error downloading the file:', error);\n        }\n    };\n\n    const handleApi = () => {\n        if (fileList === null || fileList.length === 0) {\n            return\n        }\n        const formData = new FormData()\n        formData.append(`file`, fileList[0], fileList[0].name)\n        console.log(fileList[0])\n        fetch('http://localhost:8000/api/auth/upload', {\n            method: 'POST',\n            body: formData,\n        })\n    }\n\n\n\n\n    // Testing\n    const [data, setData] = useState<DataItem[]>([]);\n    const [selectedOption, setSelectedOption] = useState<string>('');\n\n    // useEffect(() => {\n    //     // Make an HTTP request to your Go backend\n    //     axios.get('http://localhost:8000/api/auth/UserSearchAllData')\n    //         .then(response => {\n    //             console.log(response.data)\n    //             setData(response.data);\n    //         })\n    //         .catch(error => {\n    //             // Handle the error\n    //         });\n    // }, []);\n    useEffect(() => {\n        let isMounted = true; // Add a variable to track if the component is mounted\n    \n        // Fetch data from your backend API\n        fetch('http://localhost:8000/api/auth/UserSearchAllData') // Replace with the actual endpoint\n          .then((response) => response.json())\n          .then((data) => {\n            // Check if the component is still mounted before updating state\n            if (isMounted) {\n              setData(data);\n            }\n            console.log(data)\n            console.log(data[0].Dataname)\n            console.log(data[0].DownloadURL)\n          })\n          .catch((error) => {\n            console.error('Error fetching data:', error);\n          });\n    \n        // Cleanup function to set isMounted to false when the component unmounts\n        return () => {\n          isMounted = false;\n        };\n      }, []);\n\n\n\n    \n    return (\n        <div>\n            {props.name ? \n                (\n                    <div>\n                        // If Authenticated\n                        <input type=\"file\" id=\"myFile\" name=\"filename\" accept=\"image/*\" onChange={handleFileChange}/>\n                        {selectedImage && (\n                            <img\n                            src={selectedImage}\n                            alt=\"Selected\"\n                            style={{ maxWidth: '600px', maxHeight: '600px' }} // Set your desired max width and max height\n                            />\n                        )}\n                        <br />\n                        {/* <input type=\"submit\" /> */}\n                        <button onClick={handleApi}>Submit</button>\n                        <br />\n                        <button onClick={handleDownload}>Download File</button>\n\n                        {/* Testing */}\n                        {/* <select\n                            value={selectedOption}\n                            onChange={(e) => setSelectedOption(e.target.value)}\n                        >\n                            <option value=\"\">Select an option</option>\n                            {data.map((item) => (\n                            <option key={item.Dataname} value={item.DownloadURL}>\n                                {item.Dataname}\n                            </option>\n                            ))}\n                        </select> */}\n                        <select\n                        value={selectedOption}\n                        onChange={(e) => setSelectedOption(e.target.value)}\n                        >\n                        <option key=\"\" value=\"\">\n                            Select an option\n                        </option>\n                        {data.map((item) => (\n                        <option key={item.Dataname} value={item.DownloadURL}>\n                            {item.Dataname}\n                        </option>\n                        ))}\n\n                        </select>\n                        <p>Selected Download URL: {selectedOption}</p>\n                    </div>\n                )\n                :\n                (\n                    // If not Authenticate\n                    'You are not logged in'\n                )\n            }\n        </div>\n    );\n}\n\nexport default Home;\n\n\nfunction setSelectedImage(arg0: string) {\n    throw new Error('Function not implemented.');\n}\n// Optimization: pjchender - Day23"],"mappings":"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"},"metadata":{},"sourceType":"module"}